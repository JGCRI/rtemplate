name: build

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        r-version:
          - '3.6'
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true      
      GITHUB_PAT: ${{ secrets.GH_PAT}}
      HOMEBREW_NO_INSTALL_CLEANUP: 1

    steps:
      - name: Set up R
        uses: r-lib/actions/setup-r@v2-branch
        with:
          r-version: ${{ matrix.r-version }}

      - name: Check R version
        run: R --version
      
      - name: Cache R packages 
        uses: actions/cache@v1 
        with: 
          path: ${{ env.R_LIBS_USER }} 
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }} 
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1- 
      
      - name: Ubuntu config
        if: startsWith(matrix.config.os, 'ubuntu')
        run: |
          sudo add-apt-repository ppa:ubuntugis/ppa
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev libssl-dev libxml2-dev libudunits2-dev libgdal-dev libgeos-dev libproj-dev libavfilter-dev  libmagick++-dev
      
      - name: MacOS Config
        if: startsWith(matrix.config.os, 'macOS')
        run: |
            brew install pkg-config
      
      - name: Install dependencies
        run: |
          install.packages(c("remotes","rcmdcheck"), repos = "https://cloud.r-project.org")
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
           
      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}
